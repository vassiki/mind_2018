1. git/github
    look at badges for integration on github
    travis circleci for cont integ
2. python for science
3. jupyter environment
    go to localhost:9999 for launching jl after starting the kernel
    figure out your machine's ip address with ifconfig
4. open science practices
    use licences
    contribute to existing projects
    Yarik: "No code is written by god."
           "No data is written by god."
           "All code has bugs, even data has bugs."
           "Bugs are written by god."
    another reminder to use neurostars for ni questions
    git-annex assistant for keeping clones in sync
5. docker
    dockerfile: set of instr for building a docker image
    pycharm has debug mode with breakpoints
    pycharm: step in and step out of functions where defined
    pycharm and docker images work well together    
6. coding tips from Jeremy:
    create a repo
    write bs code in a hacky way 
    test boundary conditions
    start creating tags on gh
    decide what input data formats you want to support
    try to have the highest level be as semantic as possible
    jupyterlab-scripting on atom-jupyterlab for tests
    atom can be used for collaborative coding 
    writing a package is copy pasting from the original jn
    always write a "preprocessing" function for data wrangling
        to facilitate funneling
    for neuroimaging, preprocessing imaging formats and formatting
        data to the type you want to work on with the module are    
        distinct
    power of small, simulated datasets for testing/debugging code
    get to know list comprehensions, lambda functions and map 
